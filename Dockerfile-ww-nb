FROM wanglabneuro/whisk-base:0.2.2

LABEL maintainer="Vincent Prevosto <prevosto@mit.edu>"

# Copy installation files
COPY packages packages

# Package installs
RUN apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends \
    wget \
    libsm6 \
    libgl1-mesa-glx \
    libncursesw6 \
    libxext6 && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*
    # libtinfo6

# Fix error that occurs when using vscode debugger:
RUN apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends \
    libxcb-icccm4 \
    libxcb-image0 \
    libxcb-keysyms1 \
    libxcb-render-util0 \
    libxcb-xinerama0-dev \
    libxcb-randr0-dev \
    libxcb-xtest0-dev \
    libxcb-shape0-dev \
    libxcb-xkb-dev && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

# Install miniconda
ENV PYTHON_VERSION=310
ENV MINICONDA_VERSION=23.3.1-0
ENV CONDA_DIR=/home/miniconda3
ENV LATEST_CONDA_SCRIPT="Miniconda3-py${PYTHON_VERSION}_${MINICONDA_VERSION}-Linux-x86_64.sh"

RUN wget --quiet https://repo.anaconda.com/miniconda/$LATEST_CONDA_SCRIPT -O ~/miniconda.sh && \
    bash ~/miniconda.sh -b -p $CONDA_DIR && \
    rm ~/miniconda.sh
ENV PATH=$CONDA_DIR/bin:$PATH
RUN conda update conda && \
    conda install conda-build

# Make conda activate command available from /bin/bash --login shells
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> /root/.profile 
# Make conda activate command available from /bin/bash --interactive shells
RUN conda init bash
    
# Create environment for WhiskiWrap
RUN conda env create -f packages/whiski_wrap_env.yml

# Make RUN commands use the environment:
SHELL ["conda","run", "--no-capture-output", "-n","WhiskiWrap","/bin/bash","-c"]
RUN conda install --quiet --yes ipykernel && \
    python -m ipykernel install --user --name whiski_wrap --display-name "WhiskiWrap" 

# Clone the  WhiskiWrap repository
WORKDIR /app
RUN git clone https://github.com/vncntprvst/WhiskiWrap.git

## Add the whisk package 
WORKDIR /app/whisk
RUN mv build bin
ENV WHISKPATH="/app/whisk/bin"
RUN cp $WHISKPATH/libwhisk.so /app/WhiskiWrap/WhiskiWrap/ 

# add whisk binaries to path
ENV PATH="$CONDA_DIR/bin:$CONDA_DIR/condabin:$CONDA_DIR/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV PATH="$PATH:$WHISKPATH:/app/whisk/lib"

# Install the WhiskiWrap package in editable mode (so no need to copy the compiled whisk binaries to the conda environment's site-packages)
WORKDIR /app/WhiskiWrap/
RUN pip install -e .
RUN LIB_DIR=$(python -c "import sys, os; print(os.path.join(os.path.dirname(os.path.dirname(sys.executable)), 'lib'))") && \
    echo "export LD_LIBRARY_PATH=$LIB_DIR:\$LD_LIBRARY_PATH" >> ~/.bashrc

# Update permissions of executable files in the 'whisk/bin' directory
RUN find $WHISKPATH -type f -exec chmod +x {} \;

# Find the site-packages directory and update permissions for whisk/bin there too
RUN SITE_PACKAGES_DIR=$(python -c "import site; print(site.getsitepackages()[0])") && \
    WHISK_SITE_BIN_DIR="$SITE_PACKAGES_DIR/whisk/bin" && \
    find $WHISK_SITE_BIN_DIR -type f -exec chmod +x {} \;

# Set ENV variables to ensure they are available during runtime
ENV LIB_DIR="$CONDA_DIR/envs/WhiskiWrap/lib"
ENV LD_LIBRARY_PATH="$LIB_DIR:/usr/local/lib:/usr/local/lib64:$LD_LIBRARY_PATH"
ENV PATH="$PATH:$LIB_DIR"

# Create a cache directory for matplotlib
ENV MPLCONFIGDIR=/tmp/matplotlib_cache
RUN mkdir -p $MPLCONFIGDIR

# Set WhiskiWrap as default environment
SHELL [ "/bin/bash", "--login",  "-c" ]
# ENV PATH=/opt/conda/bin:$PATH
ENV PATH="$CONDA_DIR/envs/WhiskiWrap/bin:$PATH"
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> /root/.profile && \
    conda init bash && conda activate WhiskiWrap && \
    echo "conda activate WhiskiWrap" >> ~/.bashrc

# Add entrypoint script (not used)
WORKDIR /app/
COPY pipeline_call.py .

WORKDIR /data

# # Example calls: 
# docker run --rm -v $(pwd):/data -t wanglabneuro/whisk-ww \
# python -c "import WhiskiWrap; WhiskiWrap.pipeline_trace('test.mp4', 'output.hdf5', n_trace_processes=12)"

# mkdir whiski_wrap_session
# docker run --rm -v $(pwd):/data -t wanglabneuro/whisk-ww \
# python -c "import WhiskiWrap; from WhiskiWrap import FFmpegReader; \
# WhiskiWrap.interleaved_reading_and_tracing(FFmpegReader('/data/test.mp4'),'whiski_wrap_session', h5_filename='output.hdf5',n_trace_processes=20)"

# # Check LD_LIBRARY_PATH
# docker run --rm -it -v $(pwd):/data wanglabneuro/whisk-ww bash -c "echo \$LD_LIBRARY_PATH"



