FROM wanglabneuro/whisk-base:0.2.1

LABEL maintainer="Vincent Prevosto <prevosto@mit.edu>"

# Copy installation files
COPY packages packages

# Package installs
RUN apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends \
    wget \
    libsm6 \
    libgl1-mesa-glx \
    libxext6 && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

# Fix error that occurs when using vscode debugger:
# qt.qpa.plugin: Could not load the Qt platform plugin "xcb" in "" even though it was found.
# This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.
# Available platform plugins are: eglfs, minimal, minimalegl, offscreen, vnc, webgl, xcb.
RUN apt update && \
    apt upgrade -y && \
    apt install -y --no-install-recommends \
    libxcb-icccm4 \
    libxcb-image0 \
    libxcb-keysyms1 \
    libxcb-render-util0 \
    libxcb-xinerama0-dev \
    libxcb-randr0-dev \
    libxcb-xtest0-dev \
    libxcb-shape0-dev \
    libxcb-xkb-dev && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

# Install miniconda
ENV PYTHON_VERSION=310
ENV MINICONDA_VERSION=23.3.1-0
ENV CONDA_DIR=/home/miniconda3
ENV LATEST_CONDA_SCRIPT="Miniconda3-py${PYTHON_VERSION}_${MINICONDA_VERSION}-Linux-x86_64.sh"

RUN wget --quiet https://repo.anaconda.com/miniconda/$LATEST_CONDA_SCRIPT -O ~/miniconda.sh && \
    bash ~/miniconda.sh -b -p $CONDA_DIR && \
    rm ~/miniconda.sh
ENV PATH=$CONDA_DIR/bin:$PATH
RUN conda update conda && \
    conda install conda-build

# Make conda activate command available from /bin/bash --login shells
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> /root/.profile 
# Make conda activate command available from /bin/bash --interactive shells
RUN conda init bash
    
# Create environment for WhiskiWrap
RUN conda env create -f packages/whiski_wrap_env.yml

# Make RUN commands use the environment:
SHELL ["conda","run", "--no-capture-output", "-n","WhiskiWrap","/bin/bash","-c"]
RUN conda install --quiet --yes ipykernel && \
    python -m ipykernel install --user --name whiski_wrap --display-name "WhiskiWrap" 

# Clone the  WhiskiWrap repository
WORKDIR /app
RUN git clone https://github.com/vncntprvst/WhiskiWrap.git

## Add the whisk package 
WORKDIR /app/whisk
RUN mv build bin
RUN cp /app/whisk/bin/libwhisk.so /app/WhiskiWrap/WhiskiWrap/ 
ENV WHISKPATH="/app/whisk/bin"

# add whisk binaries to path
ENV PATH="$CONDA_DIR/bin:$CONDA_DIR/condabin:$CONDA_DIR/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV PATH="$PATH:/app/whisk/bin:/app/whisk/lib"

# Add the WhiskiWrap package 
WORKDIR /app/WhiskiWrap/
RUN pip install .

RUN export PACKDIR=$(python -c "import site; print(''.join(site.getsitepackages()))"); \
    find /app/WhiskiWrap/ -name *.so -exec cp {} $PACKDIR/WhiskiWrap/ \; &&\
    find /app/WhiskiWrap/ -name *.so.* -exec cp {} $PACKDIR/WhiskiWrap/ \;

# For debugging purposes - Qt creates a conflict
# But removing Qt leads to cv2 import error - ImportError: libQt5Widgets.so.5: cannot open shared object file: No such file or directory
# RUN conda remove pyqt qt-main qt-webengine qtwebkit --force
# RUN conda remove opencv --force
# SHELL [ "/bin/bash", "-c" ]
# RUN apt update && apt upgrade
# RUN dpkg --configure -a
# RUN apt install -y --no-install-recommends libqt5widgets5 libqt5gui5 libqt5svg5 qt5-gtk-platformtheme
# SHELL ["conda","run", "--no-capture-output", "-n","WhiskiWrap","/bin/bash","-c"]
# RUN conda install --quiet --yes opencv

# RUN apt install libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0-dev libxcb-randr0-dev libxcb-xtest0-dev libxcb-shape0-dev libxcb-xkb-dev
# RUN conda update libpng
# RUN conda install -c conda-forge libxcb
# RUN conda install -c conda-forge libstdc++

# Set WhiskiWrap as default environment
SHELL [ "/bin/bash", "--login",  "-c" ]
# ENV PATH=/opt/conda/bin:$PATH
ENV PATH $CONDA_DIR/envs/WhiskiWrap/bin:$PATH
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> /root/.profile && \
    conda init bash && conda activate WhiskiWrap && \
    echo "conda activate WhiskiWrap" >> ~/.bashrc

# Add entrypoint script (not working)
WORKDIR /app/
COPY pipeline_call.py .

# Error when calling script, but not when executing code through python (python -c "import WhiskiWrap; WhiskiWrap.pipeline_trace('test.mp4', 'output.hdf5', n_trace_processes=4)") or ipython  
# Adding whisk module to Python path doesn't fix it
# RUN	echo "/app/whisk/share" >> /opt/conda/envs/WhiskiWrap/lib/python3.7/site-packages/WhiskiWrap.pth
# export PYTHONPATH="${PYTHONPATH}:/opt/conda/envs/WhiskiWrap/lib/python3.7/site-packages/whisk"

WORKDIR /data

# Alternative entrypoints
# ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "WhiskiWrap", "python", "-c", "import WhiskiWrap; WhiskiWrap.pipeline_trace"]
# ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "WhiskiWrap", "/bin/bash", "-c"]
# ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "WhiskiWrap", "python", "/app/pipeline_call.py"]

# Example calls: 
# docker run --rm -v $(pwd):/data -t whisk-wrap \
# python -c "import WhiskiWrap; WhiskiWrap.pipeline_trace('test.mp4', 'output.hdf5', n_trace_processes=12)"

# mkdir whiski_wrap_session
# docker run --rm -v $(pwd):/data -t whisk-wrap \
# python -c "import WhiskiWrap; from WhiskiWrap import FFmpegReader; \
# WhiskiWrap.interleaved_reading_and_tracing(FFmpegReader('/data/test.mp4'),'whiski_wrap_session', h5_filename='output.hdf5',n_trace_processes=20)"




